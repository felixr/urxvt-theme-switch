#!/usr/bin/env perl -w
#
# Change color theme.
#
# Based on John Tyree's rotate-colors
#
# License: CCBYNC

#  URxvt.perl-ext-common: color-themes
#  URxvt.color-themes.dir
#  URxvt.keysym.M-C-n:  perl:color-themes:next
#  URxvt.keysym.M-C-p:  perl:color-themes:prev

use strict;

sub on_start {
    my ($self) = @_;
    $self->{current_index} = 0;
    my $path = $self->x_resource('color-themes.themedir')
      || "~/.themes/urxvt";
    $path = glob($path);

    my @arr = ();
    if ( opendir( DIR, $path ) ) {
        @arr = grep { -f "$path/$_" } readdir(DIR);
        @arr = map  { "$path/$_"; } @arr;
    }
    $self->{theme_files} = \@arr;
    $self->{theme_dir}   = $path;
    ();
}

sub read_commands {
    my $fn = shift;
    open my $fin, $fn or print STDERR "Unable to open $fn for reading";
    my %commands;

    while ( my $line = <$fin> ) {
        if ( $line =~ /(\w+)\s*:\s*([^!]+)\s*\n/ ) {
            $commands{$1} = $2;
        }
    }

    return %colors;
}

sub escape_seq {
    # XTerm Operating System Commands
    my %commands = (
        'colorBD'          => '5;0',
        'colorUL'          => '5;1',
        'colorBL'          => '5;2',
        'colorRV'          => '5;3',
        'foreground'       => '10',
        'background'       => '11',
        'cursorColor'      => '12',
        'pointerColor'     => '13',
        'highlightColor'   => '17',
        'backgroundPixmap' => '20',
        'italicColor'      => '704',
        'backgroundTint'   => '705',
        'boldColor'        => '706',
        'underlinedColor'  => '707',
        'borderColor'      => '708',
        'font'             => '710',
        'boldFont'         => '711',
        'italicFont'       => '712',
        'boldItalicFont'   => '713'
    );

    my ( $k, $v ) = @_;
    my $cmd = "";

    if ( $k =~ /^color(\d+)$/ ) {
        $cmd = "4;$1;$v";
    }
    else {
        if ( not exists( $commands{$k} ) ) {
            return "";
        }
        $cmd = "$commands{$k};$v";
    }

    return "\033]" . $cmd . "\007";
}

sub build_cmd {
    my $fn       = shift;
    my %commands = read_commands($fn);
    my $s = join( "", map { escape_seq( $_, $commands{$_} ) } keys %commands );

    return $s;
}

sub key_press {
    my ( $self, $event, $keysym, $string ) = @_;

    delete $self->{overlay};
    $self->disable("key_press");

    return 1;
}

sub on_user_command {
    my ( $self, $cmd ) = @_;
    my @fs  = @{ $self->{theme_files} };
    my $len = @fs;
    my $msg = "";
    if ( $len > 0 ) {
        my $idx = 0;
        if ( $cmd eq "color-themes:next" ) {
            $idx = $self->{current_index}++;
        }
        elsif ( $cmd eq "color-themes:prev" ) {
            $idx = $self->{current_index}--;
        }
        my $fn = $fs[ $idx % $len ];
        $self->cmd_parse( build_cmd($fn) );
        $msg = " Theme:" . $fn;
    }
    else {
        $msg = " No themes found in " . $self->{theme_dir};
    }

    $self->{overlay} = $self->overlay( 0, -1, $self->strwidth($msg) + 1,
        1, urxvt::OVERLAY_RSTYLE, 0 );
    $self->{overlay}->set( 0, 0, $msg );
    $self->enable( key_press => \&key_press );
    ();
}
